Name,Version,Description
i,2.1,'I' (Base Integer Instruction Set)
e,2.0,"Implements RV{32,64}E (provides 16 rather than 32 GPRs)"
m,2.0,'M' (Integer Multiplication and Division)
a,2.1,'A' (Atomic Instructions)
f,2.2,'F' (Single-Precision Floating-Point)
d,2.2,'D' (Double-Precision Floating-Point)
c,2.0,'C' (Compressed Instructions)
v,1.0,'V' (Vector Extension for Application Processors)
h,1.0,'H' (Hypervisor)
zic64b,1.0,'Zic64b' (Cache Block Size Is 64 Bytes)
zicbom,1.0,'Zicbom' (Cache-Block Management Instructions)
zicbop,1.0,'Zicbop' (Cache-Block Prefetch Instructions)
zicboz,1.0,'Zicboz' (Cache-Block Zero Instructions)
ziccamoa,1.0,'Ziccamoa' (Main Memory Supports All Atomics in A)
ziccif,1.0,'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement)
zicclsm,1.0,'Zicclsm' (Main Memory Supports Misaligned Loads/Stores)
ziccrse,1.0,'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences)
zicntr,2.0,'Zicntr' (Base Counters and Timers)
zicond,1.0,'Zicond' (Integer Conditional Operations)
zicsr,2.0,'zicsr' (CSRs)
zifencei,2.0,'Zifencei' (fence.i)
zihintntl,1.0,'Zihintntl' (Non-Temporal Locality Hints)
zihintpause,2.0,'Zihintpause' (Pause Hint)
zihpm,2.0,'Zihpm' (Hardware Performance Counters)
zimop,1.0,'Zimop' (May-Be-Operations)
zmmul,1.0,'Zmmul' (Integer Multiplication)
za128rs,1.0,'Za128rs' (Reservation Set Size of at Most 128 Bytes)
za64rs,1.0,'Za64rs' (Reservation Set Size of at Most 64 Bytes)
zama16b,1.0,"'Zama16b' (Atomic 16-byte misaligned loads, stores and AMOs)"
zawrs,1.0,'Zawrs' (Wait on Reservation Set)
zfa,1.0,'Zfa' (Additional Floating-Point)
zfh,1.0,'Zfh' (Half-Precision Floating-Point)
zfhmin,1.0,'Zfhmin' (Half-Precision Floating-Point Minimal)
zfinx,1.0,'Zfinx' (Float in Integer)
zdinx,1.0,'Zdinx' (Double in Integer)
zca,1.0,"'Zca' (part of the C extension, excluding compressed floating point loads/stores)"
zcb,1.0,'Zcb' (Compressed basic bit manipulation instructions)
zcd,1.0,'Zcd' (Compressed Double-Precision Floating-Point Instructions)
zce,1.0,'Zce' (Compressed extensions for microcontrollers)
zcf,1.0,'Zcf' (Compressed Single-Precision Floating-Point Instructions)
zcmop,1.0,'Zcmop' (Compressed May-Be-Operations)
zcmp,1.0,'Zcmp' (sequenced instuctions for code-size reduction)
zcmt,1.0,'Zcmt' (table jump instuctions for code-size reduction)
zba,1.0,'Zba' (Address Generation Instructions)
zbb,1.0,'Zbb' (Basic Bit-Manipulation)
zbc,1.0,'Zbc' (Carry-Less Multiplication)
zbkb,1.0,'Zbkb' (Bitmanip instructions for Cryptography)
zbkc,1.0,'Zbkc' (Carry-less multiply instructions for Cryptography)
zbkx,1.0,'Zbkx' (Crossbar permutation instructions)
zbs,1.0,'Zbs' (Single-Bit Instructions)
zk,1.0,'Zk' (Standard scalar cryptography extension)
zkn,1.0,'Zkn' (NIST Algorithm Suite)
zknd,1.0,'Zknd' (NIST Suite: AES Decryption)
zkne,1.0,'Zkne' (NIST Suite: AES Encryption)
zknh,1.0,'Zknh' (NIST Suite: Hash Function Instructions)
zkr,1.0,'Zkr' (Entropy Source Extension)
zks,1.0,'Zks' (ShangMi Algorithm Suite)
zksed,1.0,'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions)
zksh,1.0,'Zksh' (ShangMi Suite: SM3 Hash Function Instructions)
zkt,1.0,'Zkt' (Data Independent Execution Latency)
zvbb,1.0,'Zvbb' (Vector basic bit-manipulation instructions)
zvbc,1.0,'Zvbc' (Vector Carryless Multiplication)
zve32f,1.0,'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension)
zve32x,1.0,'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW)
zve64d,1.0,"'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension)"
zve64f,1.0,'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension)
zve64x,1.0,'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW)
zvfh,1.0,'Zvfh' (Vector Half-Precision Floating-Point)
zvfhmin,1.0,'Zvfhmin' (Vector Half-Precision Floating-Point Minimal)
zvkb,1.0,'Zvkb' (Vector Bit-manipulation used in Cryptography)
zvkb,0.1,'Zvkb' (Vector Bit-manipulation used in Cryptography)
zvkg,1.0,'Zvkg' (Vector GCM instructions for Cryptography)
zvkg,0.1,'Zvkg' (Vector GCM instructions for Cryptography)
zvkn,1.0,"'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt')"
zvknc,1.0,'Zvknc' (shorthand for 'Zvknc' and 'Zvbc')
zvkned,1.0,'Zvkned' (Vector AES Encryption & Decryption (Single Round))
zvkng,1.0,'zvkng' (shorthand for 'Zvkn' and 'Zvkg')
zvknha,1.0,'Zvknha' (Vector SHA-2 (SHA-256 only))
zvknha,0.1,'Zvknha' (Vector SHA-2 (SHA-256 only))
zvknhb,1.0,'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512))
zvknhb,0.1,'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512))
zvkns,0.1,'Zvkns' (Vector AES Encryption & Decryption (Single Round))
zvks,1.0,"'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt')"
zvksc,1.0,'Zvksc' (shorthand for 'Zvks' and 'Zvbc')
zvksed,1.0,'Zvksed' (SM4 Block Cipher Instructions)
zvksed,0.1,'Zvksed' (SM4 Block Cipher Instructions)
zvksg,1.0,'Zvksg' (shorthand for 'Zvks' and 'Zvkg')
zvksh,1.0,'Zvksh' (SM3 Hash Function Instructions)
zvksh,0.1,'Zvksh' (SM3 Hash Function Instructions)
zvkt,1.0,'Zvkt' (Vector Data-Independent Execution Latency)
zvl1024b,1.0,'Zvl' (Minimum Vector Length) 1024
zvl128b,1.0,'Zvl' (Minimum Vector Length) 128
zvl16384b,1.0,'Zvl' (Minimum Vector Length) 16384
zvl2048b,1.0,'Zvl' (Minimum Vector Length) 2048
zvl256b,1.0,'Zvl' (Minimum Vector Length) 256
zvl32768b,1.0,'Zvl' (Minimum Vector Length) 32768
zvl32b,1.0,'Zvl' (Minimum Vector Length) 32
zvl4096b,1.0,'Zvl' (Minimum Vector Length) 4096
zvl512b,1.0,'Zvl' (Minimum Vector Length) 512
zvl64b,1.0,'Zvl' (Minimum Vector Length) 64
zvl65536b,1.0,'Zvl' (Minimum Vector Length) 65536
zvl8192b,1.0,'Zvl' (Minimum Vector Length) 8192
zhinx,1.0,'Zhinx' (Half Float in Integer)
zhinxmin,1.0,'Zhinxmin' (Half Float in Integer Minimal)
sdext,1.0,'Sdext' (External Debugging Extension)
sdtrig,1.0,'Sdtrig' (Debugging Triggers)
shcounterenw,1.0,'Shcounterenw' (Support writeable hcounteren enable bit for any hpmcounter that is not read-only zero)
shgatpa,1.0,"'Sgatpa' (SvNNx4 mode supported for all modes supported by satp, as well as Bare)"
shtvala,1.0,'Shtvala' (htval provides all needed values)
shvsatpa,1.0,'Svsatpa' (vsatp supports all modes supported by satp)
shvstvala,1.0,'Shvstvala' (vstval provides all needed values)
shvstvecd,1.0,'Shvstvecd' (vstvec supports Direct mode)
smaia,1.0,'Smaia' (Advanced Interrupt Architecture Machine Level)
smepmp,1.0,'Smepmp' (Enhanced Physical Memory Protection)
smstateen,1.0,'Smstateen' (Machine-mode view of the state-enable extension.)
ss,1.13,'Ss' (Supervisor Architecture)
ss,1.12,'Ss' (Supervisor Architecture)
ssaia,1.0,'Ssaia' (Advanced Interrupt Architecture Supervisor Level)
ssccptr,1.0,'Ssccptr' (Main memory supports page table reads)
sscofpmf,1.0,'Sscofpmf' (Count Overflow and Mode-Based Filtering Architecture extension)
sscounterenw,1.0,'Sscounterenw' (Support writeable scounteren enable bit for any hpmcounter that is not read-only zero)
ssstateen,1.0,'Ssstateen' (Supervisor-mode view of the state-enable extension)
ssstrict,1.0,'Ssstrict' (No non-conforming extensions are present)
sstc,1.0,'Sstc' (Supervisor-mode timer interrupts)
sstvala,1.0,'Sstvala' (stval provides all needed values)
sstvecd,1.0,'Sstvecd' (stvec supports Direct mode)
ssu64xl,1.0,'Ssu64xl' (UXLEN=64 supported)
svade,1.0,'Svade' (Raise exceptions on improper A/D bits)
svadu,1.0,'Svadu' (Hardware A/D updates)
svbare,1.0,'Svbare' $(satp mode Bare supported)
svinval,1.0,'Svinval' (Fine-Grained Address-Translation Cache Invalidation)
svnapot,1.0,'Svnapot' (NAPOT Translation Contiguity)
svpbmt,1.0,'Svpbmt' (Page-Based Memory Types)
xcvalu,1.0,'XCValu' (CORE-V ALU Operations)
xcvbi,1.0,'XCVbi' (CORE-V Immediate Branching)
xcvbitmanip,1.0,'XCVbitmanip' (CORE-V Bit Manipulation)
xcvelw,1.0,'XCVelw' (CORE-V Event Load Word)
xcvmac,1.0,'XCVmac' (CORE-V Multiply-Accumulate)
xcvmem,1.0,'XCVmem' (CORE-V Post-incrementing Load & Store)
xcvsimd,1.0,'XCVsimd' (CORE-V SIMD ALU)
xsfpgflushdlone,0.1,'XSfpgflushdlone' (Cache Flush/Power Down Instructions)
xsfvcp,1.0,'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions)
xsfvfhbfmin,0.1,'Xsfvfhbfmin' (SiFive custom minimal BF16 vector support)
xsfvfnrclipxfqf,1.0,'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions)
xsfvfnrclipxfqf,0.1,'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions)
xsfvfwmaccqqq,1.0,'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4))
xsfvfwmaccqqq,0.1,'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4))
xsfvqdotq,0.1,'Xsfvqdotq' (SiFive Vector Quad-Widening 4D Dot Product Instructions)
xsfvqmaccdod,1.0,'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2))
xsfvqmaccdod,0.1,'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2))
xsfvqmaccqoq,1.0,'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4))
xsfvqmaccqoq,0.1,'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4))
xsifivecdiscarddlone0.1,'XSiFivecdiscarddlone',(Cache Flush/Power Down Instructions)
xsifivecflushdlone,0.1,'XSiFivecflushdlone' (Cache Flush/Power Down Instructions)
xtheadba,1.0,'xtheadba' (T-Head address calculation instructions)
xtheadbb,1.0,'xtheadbb' (T-Head basic bit-manipulation instructions)
xtheadbs,1.0,'xtheadbs' (T-Head single-bit instructions)
xtheadcmo,1.0,'xtheadcmo' (T-Head cache management instructions)
xtheadcondmov,1.0,'xtheadcondmov' (T-Head conditional move instructions)
xtheadfmemidx,1.0,'xtheadfmemidx' (T-Head FP Indexed Memory Operations)
xtheadmac,1.0,'xtheadmac' (T-Head Multiply-Accumulate Instructions)
xtheadmemidx,1.0,'xtheadmemidx' (T-Head Indexed Memory Operations)
xtheadmempair,1.0,'xtheadmempair' (T-Head two-GPR Memory Operations)
xtheadsync,1.0,'xtheadsync' (T-Head multicore synchronization instructions)
xtheadvdot,1.0,'xtheadvdot' (T-Head Vector Extensions for Dot)
xventanacondops,1.0,'XVentanaCondOps' (Ventana Conditional Ops)
zicfilp,0.4,'Zicfilp' (Landing pad)
zicfiss,0.4,'Zicfiss' (Shadow stack)
zaamo,0.2,'Zaamo' (Atomic Memory Operations)
zabha,1.0,'Zabha' (Byte and Halfword Atomic Memory Operations)
zacas,1.0,'Zacas' (Atomic Compare-And-Swap Instructions)
zalasr,0.1,'Zalasr' (Load-Acquire and Store-Release Instructions)
zalrsc,0.2,'Zalrsc' (Load-Reserved/Store-Conditional)
zfbfmin,1.0,'Zfbfmin' (Scalar BF16 Converts)
zjid,0.0,'Zjid' (Instruction/Data Cache Synchronization)
ztso,0.1,'Ztso' (Memory Model - Total Store Order)
zvfbfmin,1.0,'Zvbfmin' (Vector BF16 Converts)
zvfbfwma,1.0,'Zvfbfwma' (Vector BF16 widening mul-add)
smmpm,0.8,'Smmpm' (Machine-level Pointer Masking for M-mode)
smnpm,0.8,'Smnpm' (Machine-level Pointer Masking for next lower privilege mode)
smrnmi,0.5,'Smrnmi' (Resumable Non-Maskable Interrupts)
smwg,0.3,"'Smwg' (The Smwg extension adds the mlwid CSR, which is an M-mode read-write CSR, whose least-significant bits set the WID to be used by lower-privilege modes.)"
smwgd,0.3,'Smwgd' (The Smwgd extension adds the mwiddeleg M-mode read-write CSR. The mwiddeleg register represents a set of WIDs as a bit vector with WID i represented by bit i of the register.)
ssnpm,0.8,'Ssnpm' (Supervisor-level Pointer Masking for next lower privilege mode)
sspm,0.8,'Sspm' (Indicates Supervisor-mode Pointer Masking)
ssqosid,1.0,'Ssqosid' (Quality-of-Service (QoS) Identifiers)
sswg,0.3,"'Sswg' (The Sswg extension adds the [H]S-mode read-write slwid CSR, which sets the WID used for modes lower than [H]S-mode.)"
supm,0.8,'Supm' (Indicates User-mode Pointer Masking)
